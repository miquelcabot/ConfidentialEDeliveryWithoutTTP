{"version":3,"sources":["pages/DeliveryNew.js","ethereum/web3.js","ethereum/variables.js","../node_modules/web3-eth-accounts/src sync","components/Header.js","ethereum/notification.js","components/DeliveryRow.js","pages/Home.js","pages/DeliveryShow.js","App.js","registerServiceWorker.js","index.js","ethereum/factory.js"],"names":["bigInt","require","DeliveryNew","state","receiver","message","term1","term2","deposit","loading","errorMessage","onSubmit","event","a","preventDefault","setState","p","variables","substr","g","r","ya","messageSentBuffer","Buffer","from","messageSent","toString","c1","modPow","c2","multiply","web3","eth","getAccounts","accounts","factory","methods","createDelivery","send","value","alert","props","history","push","to","this","error","Field","onChange","target","label","labelPosition","header","content","primary","Component","withRouter","Web3","window","currentProvider","addEventListener","ethereum","enable","q","xa","c","s","xb","yb","z1","z2","w","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Menu","stackable","style","marginTop","Item","as","Link","position","Delivery","address","Contract","JSON","parse","interface","dateFormat","DeliveryRow","start","componentDidMount","deliveryContract","notification","delivery","receivers","call","getState","d","Date","setUTCSeconds","onView","onAccept","contractAddress","randBetween","minus","accept","onFinish","receiversState","add","mod","finish","Table","Row","Cell","sent","Button","animated","color","onClick","disabled","Content","hidden","visible","Icon","name","Message","Home","loadingPage","getSenderDeliveriesCount","senderDeliveriesCount","getReceiverDeliveriesCount","receiverDeliveriesCount","Promise","all","Array","parseInt","fill","map","index","senderDeliveries","receiverDeliveries","key","Segment","height","Dimmer","active","inverted","Loader","circular","fixed","Header","HeaderCell","Body","renderDeliveryRows","icon","DeliveryShow","sender","match","params","getBalance","Form","Input","readOnly","App","Container","exact","path","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","document","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","DeliveryFactory","instance"],"mappings":"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","file":"static/js/main.4e16c504.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter, Link } from \"react-router-dom\";\nimport { Form, Button, Message, Input } from 'semantic-ui-react';\nimport factory from '../ethereum/factory';\nimport web3 from '../ethereum/web3';\nimport variables from '../ethereum/variables';\n\nconst bigInt = require(\"big-integer\");\n\nclass DeliveryNew extends Component {\n  state = {\n    receiver: '',\n    message: '',\n    term1: '',\n    term2: '',\n    deposit: '',\n    loading: false,\n    errorMessage: ''\n  };\n\n  onSubmit = async event => {\n    event.preventDefault();\n\n    this.setState({ loading: true, errorMessage: '' });\n\n    try {\n        let c1, c2;\n        \n        // p, g of ElGamal algorithm\n        let p = bigInt(variables.p.substr(2), 16)\n        let g = bigInt(variables.g.substr(2), 16)\n        // Random number r\n        let r = bigInt(variables.r.substr(2), 16)\n        // ya public key of A\n        let ya = bigInt(variables.ya.substr(2), 16)\n        \n        let messageSentBuffer = Buffer.from(this.state.message, 'utf8');\n        let messageSent = bigInt(messageSentBuffer.toString('hex').substr(2), 16);\n\n        // Generation of C1 = g^r mod p\n        c1 = g.modPow(r, p);\n\n        // Generation of C2 = m·ya^r mod p\n        c2 = messageSent.multiply(ya.modPow(r, p));\n        \n        const accounts = await web3.eth.getAccounts();\n        await factory.methods\n            .createDelivery([this.state.receiver], \"0x\"+c1.toString(16), \"0x\"+c2.toString(16),\n              \"0x\"+ya.toString(16), \"0x\"+g.toString(16), \"0x\"+p.toString(16), this.state.term1, \n              this.state.term2)\n            .send({ from: accounts[0], value: this.state.deposit });\n\n        alert('Delivery created!');\n        // Refresh, using withRouter\n        this.props.history.push('/');\n    } catch (err) {\n        this.setState({ errorMessage: err.message });\n    } finally {\n        this.setState({ loading: false });\n    }\n\n  };\n\n  render() {\n    return (\n      <div>\n        <Link to='/'>Back</Link>\n        <h3>Send New Delivery</h3>\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n          <Form.Field>\n            <label>Receiver</label>\n            <Input\n              value={this.state.receiver}\n              onChange={event => this.setState({ receiver: event.target.value })}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Message</label>\n            <Input\n              value={this.state.message}\n              onChange={event => this.setState({ message: event.target.value })}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Term 1</label>\n            <Input\n              label=\"seconds\"\n              labelPosition=\"right\"\n              value={this.state.term1}\n              onChange={event => this.setState({ term1: event.target.value })}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Term 2</label>\n            <Input\n              label=\"seconds\"\n              labelPosition=\"right\"\n              value={this.state.term2}\n              onChange={event => this.setState({ term2: event.target.value })}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Deposit</label>\n            <Input\n              label=\"wei\"\n              labelPosition=\"right\"\n              value={this.state.deposit}\n              onChange={event => this.setState({ deposit: event.target.value })}\n            />\n          </Form.Field>\n\n          <Message error header=\"ERROR\" content={this.state.errorMessage} />\n          <Button primary loading={this.state.loading}>\n            Send!\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(DeliveryNew);\n","import Web3 from 'web3';\n\nconst web3 = new Web3(window.web3.currentProvider);\n\n/*\nhttps://medium.com/@parag.chirde/building-a-dapp-on-ethereum-with-vuejs-and-solidity-d01a24b54c1f\n\nhttps://medium.com/metamask/https-medium-com-metamask-breaking-change-injecting-web3-7722797916a8\n */\nwindow.addEventListener(\"load\", async () => {\n  // Modern dapp browsers...\n  if (window.ethereum) {\n    window.web3 = new Web3(window.ethereum);\n    try {\n      // Request account access if needed\n      await window.ethereum.enable();\n    } catch (error) {\n      alert('User denied account access...');\n    }\n  }\n  // Legacy dapp browsers...\n  else if (window.web3) {\n    window.web3 = new Web3(web3.currentProvider);\n  }\n  // Non-dapp browsers...\n  else {\n    alert(\"Non-Ethereum browser detected. You should consider trying MetaMask!\");\n  }\n});\n\nexport default web3;","const p = '0xdc5d8a36a8a230344e52e5e201f560ddef6e5174bdcf2f4efa29d4dfc46bed799963ae01d2a7a3f6e8147a02fe1ea12fb1451b3a9a9883da772df8027935b277';\nconst g = '0xdb80fe6702d630014c48a4ca1258885a85649f371cb462b6aa1eb9d1422cb957af0855e600b86c8fe5282cb27799437348c94b4bc9f225f6f04f36bf7df9e7b6';\nconst q = '0x6e2ec51b5451181a272972f100fab06ef7b728ba5ee797a77d14ea6fe235f6bcccb1d700e953d1fb740a3d017f0f5097d8a28d9d4d4c41ed3b96fc013c9ad93b';\nconst xa = '0x6175fb3a439d9f6be85db2eb80db357245ea3ffb3b4110507e9e4e53f392d0fdd5268a5e0033151e00a59401444e46238900188c8e953177adf6c24dfdcc6926';\nconst ya = '0x727bbeda5d10494668b3fea6522e17235f2fa4b3dfcd3d277bcbd954c40c1bc459d6f67d72bfb8d36eabb503c57ff4ed04d536869860202ae9347a4dccc01dd8';\nconst r = '0x5821caa626f4d8dc07a36af441c54dad8f52fe1dc95663fb5fa1b827b843c45e260bfca96a0eabbc89f2024f9e97166416816d17638272cd5f59f64159f1c557';\nconst c1 = '0x2c2ecf1ded0c0a1928ba4f9db3ac6b9807e01a2b2570b733ff0f895471b7ece70b2e9ff898eb70f45dd3ef9783cdca7c919c3b3920098c72c1cf0e990a9b8b10';\nconst c2 = '0x15fa0481f3e28c5d2a7f1350ecac8db25feeae4257793f3fb2f092661b8fa9c16b73810c0e754aabbd60bf89fc8c178db6425fefcea30f8d3f18875ba27035d67ad46b8fe93a613f6e9d5ec43a780d547c';\nconst c = '0x3d82319dd5178e7670fdb81c9cf8619540738360f62f2623567a1f3cb0f0cb58480c6d8ede8e491bc4a5281ae1f84dd3421f422f004a568c69856f93154b604e';\nconst s = '0x421e061ae97fe4d8c33910707ce83cf1a8d51819012423f0b3207b24f26f97c9162e5b49529f8b90a451f3d8d6142198b72a544d7a70831714557ebc12998952';\nconst xb = '0x6c6811e99a8529ba7707381a269598593f7e8318c3606e7853aa17b4777c5f09cc3353107da09ce80655f455ea772da6b3a6076b1455b7e51026b53c7b32c64a';\nconst yb = '0x5e1551f3dda7541f56229345e3e881ec8dd06d53202f8f5ce1353f993eb4607da173f53ba661554f64f9eb7a789277110b2275cff787d460a9e2013beedbd90c';\nconst z1 = '0xda4d7c460e7f8f8ab9ae9f2ad01fbe2e0168a722a0b8cafafea813bce8e432a709c64b5b6e8612a38c0ffd06eccb762fafa7d1b6de7c37b1d26643566fecadf';\nconst z2 = '0x30be88a6812f330961fab952cfa1b730ad6e365cbe78a3eb30da5079e524e3f772f3741d859ac6457e7b9dff34c2ed73d8dc0825176fe5dcdca0b1708164279e8b9564b18288754cb68738422470b46613034b434fa0d01e76edebd9092e9fce6f6be74afd62305b2de9e89400b50877122b79b279f229ff8a37239934ab8f1e';\nconst w = '0x1a0bee2083ef75fcbb02ede4e72671845d484a74a2741df725fa39f0fe9e4c9c1226e867d0b22b5fa4081f08b0fe792c1da381372d3759b47063e55a7eca9244c237d806e2ecbb651a6140881465903381f21ec5e3d96bcf8624878d43ed7faf75c7fbec364c5b0da518f8ad3915ed1366708a3f2a8db52efe8311841773efe3';\n\nexport default {\n  p  : p ,\n  g  : g ,\n  q  : q ,\n  xa : xa,\n  ya : ya,\n  r  : r ,\n  c1 : c1,\n  c2 : c2,\n  c  : c ,\n  s  : s ,\n  xb : xb,\n  yb : yb,\n  z1 : z1,\n  z2 : z2,\n  w  : w\n}\n\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 631;","import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nexport default () => {\n    return (\n        <Menu stackable style={{ marginTop: '10px' }}>\n            <Menu.Item as={Link} to='/'>\n                Confidential Multiparty Registered eDelivery without TTP\n            </Menu.Item>\n            <Menu.Menu position=\"right\">\n                <Menu.Item as={Link} to='/'>\n                    Deliveries\n                </Menu.Item>\n                <Menu.Item as={Link} to='/deliveries/new'>\n                    +\n                </Menu.Item>\n            </Menu.Menu>\n        </Menu>\n    );\n};","import web3 from './web3';\n\nconst Delivery = require('./build/ConfidentialMultipartyRegisteredEDeliveryWithoutTTP.json');\n\nexport default (address) => {\n    return new web3.eth.Contract(\n        JSON.parse(Delivery.interface),\n        address\n    );\n}","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Table, Button, Icon, Message } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport notification from '../ethereum/notification';\nimport variables from '../ethereum/variables';\n\nconst bigInt = require(\"big-integer\");\nconst dateFormat = require('dateformat');\n\nclass DeliveryRow extends Component {\n  state = {\n    receiver: '',\n    start: '',\n    state: '',\n    loading: false,\n    errorMessage: '',\n  };\n\n  componentDidMount = async () => {\n    let deliveryContract = notification(this.props.delivery);\n    let receiver = await deliveryContract.methods.receivers(0).call();\n    let start = await deliveryContract.methods.start().call();\n    let state = await deliveryContract.methods.getState(receiver).call();\n\n    let d = new Date(0);\n    d.setUTCSeconds(start);\n    start = dateFormat(d, \"dd/mm/yyyy HH:MM\");\n\n    this.setState({ \n      receiver: receiver,\n      start: start,\n      state: state\n    });\n  }\n\n  onView = async () => {\n    /*const campaign = Campaign(this.props.address);\n\n    const accounts = await web3.eth.getAccounts();\n    await campaign.methods.approveRequest(this.props.id).send({\n      from: accounts[0]\n    });*/\n  };\n\n  onAccept = async (contractAddress) => {\n\n    let c, s, xb, yb, z1, z2;\n\n    this.setState({ loading: true, errorMessage: '' });\n\n    try {\n      let deliveryContract = notification(contractAddress);\n\n      const accounts = await web3.eth.getAccounts();\n\n      // q of ElGamal algorithm\n      let q = bigInt(variables.q.substr(2), 16)\n\n      let p = bigInt((await deliveryContract.methods.p().call()).substr(2), 16);\n      let g = bigInt((await deliveryContract.methods.g().call()).substr(2), 16);\n      let ya = bigInt((await deliveryContract.methods.ya().call()).substr(2), 16);\n\n      // VARIABLES FOR ACCEPT()\n      // Generation of challenge number c\n      c = bigInt.randBetween(2, q.minus(1));      // Pot ser mes curt, meitat de bits\n      \n      // Generation of random number s\n      s = bigInt.randBetween(2, q.minus(1));\n\n      // Generation of xb, yb, private and public keys of B\n      // yb = g^xb mod p\n      xb = bigInt.randBetween(2, q.minus(1));\n      yb = g.modPow(xb, p);\n\n      // Generation of z1 = g^s mod p\n      z1 = g.modPow(s, p);\n      // Generation of z2 = xb·ya^s mod p\n      z2 = xb.multiply(ya.modPow(s, p));\n      \n      await deliveryContract.methods\n        .accept(\"0x\"+z1.toString(16), \"0x\"+z2.toString(16), \"0x\"+yb.toString(16), \"0x\"+c.toString(16))\n        .send({ from: accounts[0] });\n\n      // Refresh\n      alert('Accepted delivery! Please, refresh your browser.');\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    } finally {\n        this.setState({ loading: false });\n    }\n  };\n\n  onFinish = async (contractAddress) => {\n\n    let w;\n\n    this.setState({ loading: true, errorMessage: '' });\n\n    try {\n      let deliveryContract = notification(contractAddress);\n\n      const accounts = await web3.eth.getAccounts();\n\n      // Random number r\n      let r = bigInt(variables.r.substr(2), 16)\n      // xb private key of B\n      // kkkkk TODO: Com ho podem saber?\n      let xb = bigInt(variables.xb.substr(2), 16)\n\n      let receiver = await deliveryContract.methods.receivers(0).call();\n      let p = bigInt((await deliveryContract.methods.p().call()).substr(2), 16);\n      let c = bigInt(((await deliveryContract.methods.receiversState(receiver).call()).c).substr(2), 16);\n\n      // VARIABLES FOR FINISH()\n      //const w = r.add(c.mod(p).multiply(xb.mod(p)).mod(p));\n      w =  r.add(c.multiply(xb.mod(p)));\n      \n      await deliveryContract.methods\n        .finish(receiver, \"0x\"+w.toString(16))\n        .send({ from: accounts[0] });\n\n      // Refresh\n      alert('Finished delivery! Please, refresh your browser.');\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    } finally {\n        this.setState({ loading: false });\n    }\n  };\n\n  render() {\n      return (\n          <Table.Row>\n              <Table.Cell>{this.props.id+1}</Table.Cell>\n              <Table.Cell>{this.props.delivery}</Table.Cell>\n              <Table.Cell>{this.state.receiver}</Table.Cell>\n              <Table.Cell>{this.state.start}</Table.Cell>\n              <Table.Cell>{this.state.state}</Table.Cell>\n              <Table.Cell>\n                  {\n                    this.props.sent ? (\n                      <Button animated='vertical' color='blue' onClick={() => this.onFinish(this.props.delivery)} disabled={this.state.state!=='accepted'} loading={this.state.loading}>\n                        <Button.Content hidden>Finish</Button.Content>\n                        <Button.Content visible>\n                          <Icon name='send' />\n                        </Button.Content>\n                      </Button>\n                    ) : (\n                      <Button animated='vertical' color='blue' onClick={() => this.onAccept(this.props.delivery)} disabled={this.state.state!=='created'} loading={this.state.loading}>\n                        <Button.Content hidden>Accept</Button.Content>\n                        <Button.Content visible>\n                          <Icon name='check' />\n                        </Button.Content>\n                    </Button>\n                    )\n                  }\n                  <Link to={\"/deliveries/\"+this.props.delivery}>\n                    <Button animated='vertical' color='blue' onClick={this.onView}>\n                      <Button.Content hidden>View</Button.Content>\n                      <Button.Content visible>\n                        <Icon name='eye' />\n                      </Button.Content>\n                    </Button>\n                  </Link>\n                  <Message error header=\"ERROR\" content={this.state.errorMessage} hidden={!this.state.errorMessage} />\n              </Table.Cell>\n          </Table.Row>\n          \n      );\n    }\n}\n\nexport default DeliveryRow;\n","import React, { Component } from 'react';\nimport { Icon, Button, Dimmer, Loader, Segment, Table } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport factory from '../ethereum/factory';\nimport web3 from '../ethereum/web3';\nimport DeliveryRow from '../components/DeliveryRow';\n\nclass Home extends Component {\n    state = {\n        loadingPage: true,\n        loading: false,\n        errorMessage: ''\n    };\n\n    componentDidMount = async () => {\n        try {\n            const accounts = await web3.eth.getAccounts();\n            const senderDeliveriesCount = await factory.methods.getSenderDeliveriesCount(accounts[0]).call();\n            const receiverDeliveriesCount = await factory.methods.getReceiverDeliveriesCount(accounts[0]).call();\n\n            const senderDeliveries = await Promise.all(\n                Array(parseInt(senderDeliveriesCount))\n                  .fill()\n                  .map((delivery, index) => {\n                    return factory.methods.senderDeliveries(accounts[0], index).call();\n                  })\n              );\n\n              const receiverDeliveries = await Promise.all(\n                Array(parseInt(receiverDeliveriesCount))\n                  .fill()\n                  .map((delivery, index) => {\n                    return factory.methods.receiverDeliveries(accounts[0], index).call();\n                  })\n              );\n\n            this.setState({ \n                senderDeliveries: senderDeliveries, \n                receiverDeliveries: receiverDeliveries \n            });\n        } finally {\n            this.setState({ loadingPage: false })\n        }\n    }\n\n    renderDeliveryRows(sent) {\n        var deliveries;\n        if (sent) {\n            deliveries = this.state.senderDeliveries;\n        } else {\n            deliveries = this.state.receiverDeliveries;\n        }\n        return deliveries.map((delivery, index) => {\n            return (\n                <DeliveryRow\n                    key={index}\n                    id={index}\n                    delivery={delivery}\n                    sent={sent}\n                />\n            );\n        });\n    }\n\n    render() {\n        // Loading\n        if (this.state.loadingPage) return (\n            <div>\n                <Segment style={{ height: '80vh' }}>\n                    <Dimmer active inverted>\n                        <Loader inverted content='Loading...' />\n                    </Dimmer>\n                </Segment>\n            </div>\n        );\n      \n        // Done\n        return (\n            <div>\n                <h3><Icon name='sign in alternate' circular />&nbsp;Received deliveries</h3>\n                <Table fixed>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>#</Table.HeaderCell>\n                            <Table.HeaderCell>Address</Table.HeaderCell>\n                            <Table.HeaderCell>Sender</Table.HeaderCell>\n                            <Table.HeaderCell>Timestamp</Table.HeaderCell>\n                            <Table.HeaderCell>State</Table.HeaderCell>\n                            <Table.HeaderCell>Action</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>{this.renderDeliveryRows(false)}</Table.Body>\n                </Table>\n                <h3><Icon name='sign out alternate' circular />&nbsp;Sent deliveries</h3>\n                <Table fixed>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>#</Table.HeaderCell>\n                            <Table.HeaderCell>Address</Table.HeaderCell>\n                            <Table.HeaderCell>Receiver</Table.HeaderCell>\n                            <Table.HeaderCell>Timestamp</Table.HeaderCell>\n                            <Table.HeaderCell>State</Table.HeaderCell>\n                            <Table.HeaderCell>Action</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>{this.renderDeliveryRows(true)}</Table.Body>\n                </Table>\n                <Link to=\"/deliveries/new\">\n                    <Button\n                        content = \"Send New Delivery\"\n                        icon = \"add circle\"\n                        primary = {true}\n                        />\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { withRouter, Link } from \"react-router-dom\";\nimport { Form, Button, Message, Input } from 'semantic-ui-react';\nimport notification from '../ethereum/notification';\nimport web3 from '../ethereum/web3';\n\nconst dateFormat = require('dateformat');\n\nclass DeliveryShow extends Component {\n  state = {\n    address: '',\n    sender: '',\n    receiver: '',\n    state: '',\n    g: '',\n    p: '',\n    c1: '',\n    c2: '',\n    ya: '',\n    term1: '',\n    term2: '',\n    start: '',\n    z1: '',\n    z2: '',\n    yb: '',\n    c: '',\n    w: '',\n    message: '',\n    deposit: '',\n    errorMessage: ''\n  };\n\n  componentDidMount = async () => {\n\n    try {\n      let address = this.props.match.params.address;\n      let deliveryContract = notification(address);\n\n      let deposit = await web3.eth.getBalance(address)\n\n      let sender = await deliveryContract.methods.sender().call();\n      let receiver = await deliveryContract.methods.receivers(0).call();\n      let state = await deliveryContract.methods.getState(receiver).call();\n      let g = await deliveryContract.methods.g().call();\n      let p = await deliveryContract.methods.p().call();\n      let c1 = await deliveryContract.methods.c1().call();\n      let c2 = await deliveryContract.methods.c2().call();\n      let ya = await deliveryContract.methods.ya().call();\n      let term1 = await deliveryContract.methods.term1().call();\n      let term2 = await deliveryContract.methods.term2().call();\n      let start = await deliveryContract.methods.start().call();\n\n      let receiversState = await deliveryContract.methods.receiversState(receiver).call();\n\n      let z1 = receiversState.z1;\n      let z2 = receiversState.z2;\n      let yb = receiversState.yb;\n      let c = receiversState.c;\n      let w = receiversState.w;\n\n      let d = new Date(0);\n      d.setUTCSeconds(start);\n      start = dateFormat(d, \"dd/mm/yyyy HH:MM\");\n\n      this.setState({ \n        address: address,\n        sender: sender,\n        receiver: receiver,\n        state: state,\n        g: g,\n        p: p,\n        c1: c1,\n        c2: c2,\n        ya: ya,\n        term1: term1,\n        term2: term2,\n        start: start,\n        z1: z1,\n        z2: z2,\n        yb: yb,\n        c: c,\n        w: w,\n        deposit: deposit\n      });\n    } catch (err) {\n      this.setState({ errorMessage: err.message });\n    }\n  }\n\n  onSubmit = async event => {\n    event.preventDefault();\n\n    // Refresh, using withRouter\n    this.props.history.push('/');\n  };\n\n  render() {\n    return (\n      <div>\n        <Link to='/'>Back</Link>\n        <h3>Show Delivery</h3>\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n          <Form.Field>\n            <label>Address of Smart Contract</label>\n            <Input\n              readOnly\n              value={this.state.address}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Sende</label>\n            <Input\n              readOnly\n              value={this.state.sender}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Receiver</label>\n            <Input\n              readOnly\n              value={this.state.receiver}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>State</label>\n            <Input\n              readOnly\n              value={this.state.state}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>p of ElGamal algorithm</label>\n            <Input\n              readOnly\n              value={this.state.p}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>g of ElGamal algorithm</label>\n            <Input\n              readOnly\n              value={this.state.g}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>c1 = g^r mod p</label>\n            <Input\n              readOnly\n              value={this.state.c1}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>c2 = m·ya^r mod p</label>\n            <Input\n              readOnly\n              value={this.state.c2}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>ya public key of A, ya = g^xa mod p</label>\n            <Input\n              readOnly\n              value={this.state.ya}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Term 1</label>\n            <Input\n              readOnly\n              label=\"seconds\"\n              labelPosition=\"right\"\n              value={this.state.term1}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Term 2</label>\n            <Input\n              readOnly\n              label=\"seconds\"\n              labelPosition=\"right\"\n              value={this.state.term2}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Start (Timestamp)</label>\n            <Input\n              readOnly\n              value={this.state.start}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>z1</label>\n            <Input\n              readOnly\n              value={this.state.z1}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>z2</label>\n            <Input\n              readOnly\n              value={this.state.z2}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>yb</label>\n            <Input\n              readOnly\n              value={this.state.yb}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>c</label>\n            <Input\n              readOnly\n              value={this.state.c}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>w</label>\n            <Input\n              readOnly\n              value={this.state.w}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Message</label>\n            <Input\n              readOnly\n              value={this.state.message}\n              onChange={event => this.setState({ message: event.target.value })}\n            />\n          </Form.Field>\n\n          <Form.Field>\n            <label>Deposit</label>\n            <Input\n              label=\"wei\"\n              labelPosition=\"right\"\n              value={this.state.deposit}\n            />\n          </Form.Field>\n\n          <Message error header=\"ERROR\" content={this.state.errorMessage} />\n          <Button primary loading={this.state.loading}>\n            Close\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(DeliveryShow);\n","import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport { Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Home from './pages/Home';\nimport DeliveryNew from './pages/DeliveryNew';\nimport DeliveryShow from './pages/DeliveryShow';\n/*import CampaignNew from './pages/CampaignNew';\nimport CampaignShow from './pages/CampaignShow';\nimport RequestShow from './pages/RequestShow';\nimport RequestNew from './pages/RequestNew';*/\nimport 'semantic-ui-css/semantic.min.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <Container>\n                <Header />\n                <main>\n                    <Switch>\n                        <Route exact path='/' component={Home}/>\n                        <Route exact path='/deliveries/new' component={DeliveryNew}/>\n                        <Route exact path='/deliveries/:address' component={DeliveryShow}/>\n                        {/*<Route exact path='/campaigns/:address' component={CampaignShow}/>\n                        <Route exact path='/campaigns/:address/requests' component={RequestShow}/>\n                        <Route exact path='/campaigns/:address/requests/new' component={RequestNew}/>*/}\n                    </Switch>\n                </main>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n  \nReactDOM.render((\n    <HashRouter>\n      <App />\n    </HashRouter>\n    ), document.getElementById('root'));\nregisterServiceWorker();\n","import web3 from './web3';\n\n//const path = require(\"path\");\n//const fs = require(\"fs-extra\"); // fs with extra functions\n\nconst DeliveryFactory = require('./build/ConfidentialMultipartyRegisteredEDeliveryWithoutTTPFactory.json');\n\nconst instance = new web3.eth.Contract(\n    JSON.parse(DeliveryFactory.interface),\n    DeliveryFactory.address\n);\n\nexport default instance;"],"sourceRoot":""}